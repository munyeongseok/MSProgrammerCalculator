<Window x:Class="MSProgrammerCalculator.CalculatorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:MSProgrammerCalculator"
        xmlns:views="clr-namespace:MSProgrammerCalculator.Views"
        xmlns:viewModels="clr-namespace:MSProgrammerCalculator.ViewModels"
        xmlns:converters="clr-namespace:MSProgrammerCalculator.Converters"
        xmlns:common="clr-namespace:MSProgrammerCalculator.Common"
        xmlns:calculator="clr-namespace:Calculator;assembly=Calculator"
        mc:Ignorable="d"
        Title="계산기"
        Width="340"
        Height="510"
        MinWidth="340"
        MinHeight="510"
        Background="#FFF3F3F3"
        SizeChanged="Window_SizeChanged">
    <Window.DataContext>
        <viewModels:CalculatorViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <converters:CombiningConverter x:Key="enumToBooleanConverter">
            <converters:ComparisonConverter/>
            <BooleanToVisibilityConverter/>
        </converters:CombiningConverter>
    </Window.Resources>
    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MaxHeight="70"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="1*" MinHeight="40" MaxHeight="70"/>
            <RowDefinition Height="7*" MinHeight="240"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition x:Name="memoryPanelColumn" Width="8*" MaxWidth="320"/>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Row="0" VerticalAlignment="Center" Margin="10" Text="프로그래머" FontSize="21" FontWeight="Bold"/>
        <views:DisplayView x:Name="displayView"
                           Grid.Row="1"
                           Expression="{Binding Expression}"
                           DisplayValue="{Binding DisplayOperand}"
                           ErrorMessage="{Binding ErrorMessage}"
                           SelectedBaseNumber="{Binding SelectedBaseNumber, Mode=OneWayToSource}"/>
        <views:KeypadControlView x:Name="keypadControlView"
                                 Grid.Row="2"/>
        <views:NumericKeypadView x:Name="numericKeypadView"
                                 Grid.Row="3"
                                 Visibility="{Binding ElementName=keypadControlView, Path=KeypadMode, Converter={StaticResource enumToBooleanConverter}, ConverterParameter={x:Static common:KeypadMode.NumericKeypad}}"
                                 TargetBaseNumber="{Binding ElementName=displayView, Path=SelectedBaseNumber, Mode=OneWay}"
                                 ClearButtonContent="{Binding ClearButtonContent}">
            <i:Interaction.Triggers>
                <!-- #region Click Events Command Binding: AND, OR, NOT, NAND, NOR, XOR -->
                <i:EventTrigger EventName="ClickAND">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.BitwiseAND}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickOR">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.BitwiseOR}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickNOT">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.BitwiseNOT}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickNAND">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.BitwiseNAND}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickNOR">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.BitwiseNOR}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickXOR">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.BitwiseXOR}"/>
                </i:EventTrigger>
                <!-- #endregion -->
                <!-- #region Click Events Command Binding: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F -->
                <i:EventTrigger EventName="Click0">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.Num0}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click1">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.Num1}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click2">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.Num2}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click3">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.Num3}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click4">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.Num4}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click5">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.Num5}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click6">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.Num6}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click7">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.Num7}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click8">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.Num8}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click9">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.Num9}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickA">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.NumA}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickB">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.NumB}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickC">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.NumC}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickD">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.NumD}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickE">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.NumE}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickF">
                    <i:InvokeCommandAction Command="{Binding NumberButtonClickCommand}" CommandParameter="{x:Static calculator:Numbers.NumF}"/>
                </i:EventTrigger>
                <!-- #endregion -->
                <!-- #region Click Events Command Binding: LeftShift, RightShift, Modulo, Divide, Multiply, Minus, Plus, Negate, Clear, BackSpace, OpenParenthesis, CloseParenthesis, DecimalSeparator, Result -->
                <i:EventTrigger EventName="ClickLeftShift">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.LeftShift}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickRightShift">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.RightShift}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickModulo">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.Modulo}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickDivide">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.Divide}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickMultiply">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.Multiply}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickMinus">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.Minus}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickPlus">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.Plus}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickNegate">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.Negate}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickClear">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.Clear}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickBackSpace">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.Backspace}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickOpenParenthesis">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.OpenParenthesis}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickCloseParenthesis">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.CloseParenthesis}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickDecimalSeparator">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.DecimalSeparator}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="ClickSubmit">
                    <i:InvokeCommandAction Command="{Binding OperatorButtonClickCommand}" CommandParameter="{x:Static calculator:Operators.Submit}"/>
                </i:EventTrigger>
                <!-- #endregion -->
            </i:Interaction.Triggers>
        </views:NumericKeypadView>
        <views:BitKeypadView x:Name="bitKeypadView"
                             Grid.Row="3"
                             Visibility="{Binding ElementName=keypadControlView, Path=KeypadMode, Converter={StaticResource enumToBooleanConverter}, ConverterParameter={x:Static common:KeypadMode.BitKeypad}}"
                             BitDataUnit="{Binding ElementName=keypadControlView, Path=BitDataUnit}"
                             ValueChanged="BitKeypadView_ValueChanged"/>
        <!-- 메모리 뷰 미구현 -->
        <TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Margin="10" Text="메모리 뷰 미구현" FontSize="21" FontWeight="Bold"/>
    </Grid>
</Window>
